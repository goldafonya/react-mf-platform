{"version":3,"sources":["webpack://ui-platform/./src/models/Project.ts","webpack://ui-platform/./src/components/Foo.tsx","webpack://ui-platform/./src/constants/ROUTES.ts","webpack://ui-platform/./src/components/Bar.tsx","webpack://ui-platform/./src/services/ProjectService.ts","webpack://ui-platform/./src/components/Header.tsx","webpack://ui-platform/./src/components/ProjectCard.tsx","webpack://ui-platform/./src/components/ProjectList.tsx","webpack://ui-platform/./src/components/App.tsx"],"names":["id","title","description","url","component","this","Foo","to","Bar","Header","loc","project","find","p","pathname","header","AppBar","position","Toolbar","Container","maxWidth","Typography","variant","ProjectCard","useState","isHover","setHover","onMouseEnter","useCallback","onMouseLeave","Paper","elevation","Card","CardContent","gutterBottom","ProjectList","style","paddingTop","Grid","container","spacing","map","item","key","width","window","history","default","path"],"mappings":"uNAWI,SAAYA,EAAYC,EAAeC,EAAqBC,EAAaC,GANzE,iC,yDACA,oC,yDACA,0C,yDACA,kC,yDACA,wC,yDAGIC,KAAKL,GAAKA,EACVK,KAAKJ,MAAQA,EACbI,KAAKH,YAAcA,EACnBG,KAAKF,IAAMA,EACXE,KAAKD,UAAYA,GCZZE,EAA+B,WACxC,OACI,2BACI,2BACI,gBAAC,KAAI,CAACC,GCPZ,KDO2B,U,QEJxBC,EAA+B,WACxC,OACI,2BACI,2BACI,gBAAC,KAAI,CAACD,GDPZ,KCO2B,U,UCJrC,yBAsBA,OArBW,0C,gDAAiB,WAEpB,MAAO,CAEC,IAAI,EACI,IACJ,MACA,wEACA,OACAD,GAEJ,IAAI,EACI,IACJ,MACA,wEACA,OACAE,OAKpB,EAtBA,GCIaC,EAAS,WAClB,IAAMC,GAAM,UAENC,EADW,mBACQC,MAAK,SAAAC,GAAK,OAAAA,EAAEV,MAAQO,EAAII,YAC3CC,EAASJ,EAAUA,EAAQV,MAAQ,kBAEzC,OACI,gBAACe,EAAA,EAAM,CAACC,SAAS,UACb,gBAACC,EAAA,EAAO,KACJ,gBAACC,EAAA,EAAS,CAACC,SAAS,MAChB,gBAACC,EAAA,EAAU,CAACC,QAAQ,MACfP,O,2BCPZQ,EAAgC,SAAC,G,IAAEZ,EAAO,UAC7C,GAAsB,IAAAa,WAAS,GAA9BC,EAAO,KAAEC,EAAQ,KAElBC,GAAe,IAAAC,cAAY,WAAM,OAAAF,GAAS,KAAO,IACjDG,GAAe,IAAAD,cAAY,WAAM,OAAAF,GAAS,KAAQ,IAExD,OACI,uBAAKC,aAAcA,EAAcE,aAAcA,GAC3C,gBAAC,KAAI,CAACtB,GAAII,EAAQR,KACd,gBAAC2B,EAAA,EAAK,CAACC,UAAWN,EAAU,EAAI,GAC5B,gBAACO,EAAA,EAAI,KACD,gBAACC,EAAA,EAAW,KACR,gBAACZ,EAAA,EAAU,CAACa,cAAY,EAACZ,QAAQ,KAAKlB,UAAU,MAC3CO,EAAQV,OAEb,gBAACoB,EAAA,EAAU,KACNV,EAAQT,aAEb,gBAACmB,EAAA,EAAU,KAAEV,EAAQR,W,SCxBpCgC,EAAuC,WAEhD,OACI,uBAAKC,MAAO,CAACC,WAAY,SACrB,gBAACC,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,GACpB,mBAAgCC,KAAI,SAACC,GAAS,OAC3C,gBAACJ,EAAA,EAAI,CAACI,MAAI,EAACC,IAAKD,EAAK1C,GAAIoC,MAAO,CAACQ,MAAO,SACpC,gBAACrB,EAAW,CAACZ,QAAS+B,WCJ1C,GAAU,QAAcG,QAwB5B,EAtBY,WAER,OACI,gCACI,gBAAC,KAAgB,CAACC,QAAS,GACvB,gBAACrC,EAAM,MACP,gBAACU,EAAA,EAAS,CAACC,SAAS,MAChB,gBAAC,KAAM,KACH,gBAACe,EAAW,CAACY,SAAO,EAACC,KNlBnC,MMmBe,mBAAgCP,KAAI,SAAA5B,GAAK,OACtC,gBAACA,EAAET,UAAS,CACR4C,KAAMnC,EAAEV,IACRwC,IAAK9B,EAAEV","file":"app.d4616e4044476c2826b9.chunk.js","sourcesContent":["import {RouteComponentProps} from \"@reach/router\";\nimport React from \"react\";\n\nexport default class Project {\n\n    id: string;\n    title: string;\n    description: string;\n    url: string;\n    component: React.FC<RouteComponentProps>;\n\n    constructor(id: string, title: string, description: string, url: string, component: React.FC) {\n        this.id = id;\n        this.title = title;\n        this.description = description;\n        this.url = url;\n        this.component = component;\n    }\n}\n","import {RouteComponentProps, Link} from \"@reach/router\";\nimport React, {FC} from \"react\";\nimport {ROUTES} from \"../constants/ROUTES\";\n\nexport const Foo: FC<RouteComponentProps> = () => {\n    return (\n        <div>\n            <div>\n                <Link to={ROUTES.ROOT}>Назад</Link>\n            </div>\n            foo\n        </div>\n    )\n};","export const ROUTES = {\n    ROOT: \"/\",\n};","import {Link, RouteComponentProps} from \"@reach/router\";\nimport React, {FC} from \"react\";\nimport {ROUTES} from \"../constants/ROUTES\";\n\nexport const Bar: FC<RouteComponentProps> = () => {\n    return (\n        <div>\n            <div>\n                <Link to={ROUTES.ROOT}>Назад</Link>\n            </div>\n            bar\n        </div>\n    )\n};","import Project from \"../models/Project\";\nimport {Foo} from \"../components/Foo\";\nimport {Bar} from \"../components/Bar\";\n\nexport default class ProjectService {\n    static getProjectList = () => {\n\n        return (\n            [\n                new Project(\n                        \"1\",\n                    \"foo\",\n                    \"description descriptiondescription descriptiondescription description\",\n                    \"/foo\",\n                    Foo\n                ),\n                new Project(\n                        \"2\",\n                    \"bar\",\n                    \"description descriptiondescription descriptiondescription description\",\n                    \"/bar\",\n                    Bar\n                ),\n            ]\n        )\n    }\n}","import React from \"react\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Container from \"@material-ui/core/Container\";\nimport {useLocation} from \"@reach/router\";\nimport ProjectService from \"../services/ProjectService\";\n\nexport const Header = () => {\n    const loc = useLocation();\n    const projects = ProjectService.getProjectList();\n    const project = projects.find(p => p.url === loc.pathname);\n    const header = project ? project.title : \"Список проектов\";\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Container maxWidth=\"md\">\n                    <Typography variant=\"h6\">\n                        {header}\n                    </Typography>\n                </Container>\n            </Toolbar>\n        </AppBar>\n    );\n};","import React, {FC, useCallback, useState} from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"@reach/router\";\nimport Project from \"../models/Project\";\n\ninterface IProjectCard {\n    project: Project;\n}\n\nexport const ProjectCard: FC<IProjectCard> = ({ project }) => {\n    const [isHover, setHover] = useState(false);\n\n    const onMouseEnter = useCallback(() => setHover(true), []);\n    const onMouseLeave = useCallback(() => setHover(false), []);\n\n    return (\n        <div onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            <Link to={project.url}>\n                <Paper elevation={isHover ? 4 : 1}>\n                    <Card>\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                {project.title}\n                            </Typography>\n                            <Typography>\n                                {project.description}\n                            </Typography>\n                            <Typography>{project.url}</Typography>\n                        </CardContent>\n                    </Card>\n                </Paper>\n            </Link>\n        </div>\n\n    )\n}","import React, {FC} from \"react\";\nimport ProjectService from \"../services/ProjectService\";\nimport {RouteComponentProps} from \"@reach/router\";\nimport {ProjectCard} from \"./ProjectCard\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport const ProjectList: FC<RouteComponentProps> = () => {\n\n    return (\n        <div style={{paddingTop: \"12px\"}}>\n            <Grid container spacing={3}>\n                {ProjectService.getProjectList().map((item) => (\n                    <Grid item key={item.id} style={{width: \"100%\"}}>\n                        <ProjectCard project={item}/>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    )\n};","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport {Header} from \"./Header\";\nimport {ProjectList} from \"./ProjectList\";\nimport {createHistory, LocationProvider, Router} from \"@reach/router\";\nimport {ROUTES} from \"../constants/ROUTES\";\nimport ProjectService from \"../services/ProjectService\";\n\n// @ts-ignore\nlet history = createHistory(window);\n\nconst App = () => {\n\n    return (\n        <>\n            <LocationProvider history={history}>\n                <Header/>\n                <Container maxWidth=\"md\">\n                    <Router>\n                        <ProjectList default path={ROUTES.ROOT}/>\n                        {ProjectService.getProjectList().map(p => (\n                            <p.component\n                                path={p.url}\n                                key={p.url}\n                            />\n                        ))}\n                    </Router>\n                </Container>\n            </LocationProvider>\n        </>\n    )\n};\n\nexport default App;"],"sourceRoot":""}